{"version":3,"sources":["Components/frontComponent.js","Components/headerComponent.js","Components/homeComponent.js","Components/createComponent.js","Components/gradeComponent.js","App.js","serviceWorker.js","index.js"],"names":["Front","props","state","isModalOpen","handleLogin","bind","toggleModal","this","setState","event","console","log","username","value","password","remember","checked","preventDefault","className","Navbar","dark","NavbarBrand","href","Nav","navbar","NavItem","Button","outline","color","onClick","Form","FormGroup","row","Label","htmlFor","Input","type","id","name","innerRef","input","ButtonGroup","active","disabled","Modal","isOpen","toggle","ModalHeader","ModalBody","onSubmit","check","Component","Header","isNavOpen","toggleNav","Fragment","expand","NavbarToggler","Collapse","to","Home","list","map","ins","key","Create","file","level","task_id","instructions","handleSubmit","values","handleChange","URL","createObjectURL","target","files","for","onChange","FormText","tag","rows","e","src","Grade","grades","temp_task","score","reg","handleInput","push","task1","task2","task3","entry","Card","CardTitle","CardBody","alt","CardFooter","Row","Col","xs","sm","min","max","placeholder","handleScore","defaultValue","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3dcd7f27.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Navbar,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  ButtonGroup,\r\n} from \"reactstrap\";\r\nimport \"../css/front.css\";\r\n\r\nclass Front extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isModalOpen: false,\r\n    };\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n  }\r\n  toggleModal() {\r\n    this.setState({ isModalOpen: !this.state.isModalOpen });\r\n  }\r\n  handleLogin(event) {\r\n    this.toggleModal();\r\n    console.log(\r\n      \"Username: \" +\r\n        this.username.value +\r\n        \" Password: \" +\r\n        this.password.value +\r\n        \" Remember: \" +\r\n        this.remember.checked\r\n    );\r\n\r\n    event.preventDefault();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"frontpage\">\r\n        <Navbar dark>\r\n          <div className=\"container\">\r\n            <NavbarBrand className=\"mr-auto front-nav\" href=\"/\">\r\n              <i className=\"fa fa-i-cursor brand \"></i>\r\n              <i className=\"fa fa-etsy brand\"></i>\r\n            </NavbarBrand>\r\n\r\n            <Nav className=\"ml-auto \" navbar>\r\n              <NavItem>\r\n                <Button outline color=\"success\" onClick={this.toggleModal}>\r\n                  <span className=\"fa fa-sign-in fa-lg\"></span> Login\r\n                </Button>\r\n              </NavItem>\r\n            </Nav>\r\n          </div>\r\n        </Navbar>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-sm-6 offset-1 text\">\r\n              <p>An online image editing bootcamp</p>\r\n              <p>Choose to learn</p>\r\n              <p>or choose to instruct</p>{\" \"}\r\n              <p className=\"para\">Edit without mercy</p>\r\n              <p className=\"para\"> and let the magic flow...</p>\r\n            </div>{\" \"}\r\n            <div className=\"col-8 col-sm-3 offset-2 offset-sm-2 form \">\r\n              <h2>REGISTER HERE</h2>\r\n              <hr />\r\n\r\n              <Form>\r\n                <FormGroup row>\r\n                  <Label htmlFor=\"username\">Username :</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    id=\"username\"\r\n                    name=\"username\"\r\n                    innerRef={(input) => (this.username = input)}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label htmlFor=\"password\">Password :</Label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    innerRef={(input) => (this.password = input)}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <ButtonGroup>\r\n                    <Button color=\"primary\" active={true}>\r\n                      Register as instructor\r\n                    </Button>\r\n                    <Button color=\"primary\" disabled={true}>\r\n                      Register as student\r\n                    </Button>\r\n                  </ButtonGroup>\r\n                </FormGroup>\r\n                <hr />\r\n                <Button\r\n                  type=\"submit\"\r\n                  value=\"submit\"\r\n                  color=\"success\"\r\n                  className=\"btn-block\"\r\n                >\r\n                  Register\r\n                </Button>{\" \"}\r\n              </Form>\r\n\r\n              <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                <ModalHeader>Login</ModalHeader>\r\n                <ModalBody>\r\n                  {\" \"}\r\n                  <Form onSubmit={this.handleLogin}>\r\n                    <FormGroup>\r\n                      <Label htmlFor=\"username\">Username</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        id=\"username\"\r\n                        name=\"username\"\r\n                        innerRef={(input) => (this.username = input)}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label htmlFor=\"password\">Password</Label>\r\n                      <Input\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        innerRef={(input) => (this.password = input)}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup check>\r\n                      <Label check>\r\n                        <Input\r\n                          type=\"checkbox\"\r\n                          name=\"remember\"\r\n                          innerRef={(input) => (this.remember = input)}\r\n                        />\r\n                        Remember me\r\n                      </Label>\r\n                    </FormGroup>\r\n                    <hr />\r\n                    <Button\r\n                      type=\"submit\"\r\n                      value=\"submit\"\r\n                      color=\"primary\"\r\n                      href=\"/home\"\r\n                    >\r\n                      Login\r\n                    </Button>{\" \"}\r\n                    <Button color=\"danger\" onClick={this.toggleModal}>\r\n                      Cancel\r\n                    </Button>\r\n                  </Form>\r\n                </ModalBody>\r\n              </Modal>\r\n            </div>\r\n          </div>{\" \"}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Front;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Navbar,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavbarToggler,\r\n  NavItem,\r\n  Collapse,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isNavOpen: false,\r\n    };\r\n\r\n    this.toggleNav = this.toggleNav.bind(this);\r\n  }\r\n  toggleNav() {\r\n    this.setState({\r\n      isNavOpen: !this.state.isNavOpen,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Navbar dark expand=\"md\">\r\n          <div className=\"container\">\r\n            <NavbarToggler onClick={this.toggleNav} />\r\n            <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n              <i className=\"fa fa-i-cursor dark toggler\"></i>\r\n              <i className=\"fa fa-etsy\"></i>\r\n            </NavbarBrand>\r\n            <Collapse isOpen={this.state.isNavOpen} navbar>\r\n              <Nav navbar>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/home\">\r\n                    <span className=\"fa fa-home fa-lg\"></span> Home\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/createTask\">\r\n                    <span className=\"fa fa-plus fa-lg\"></span> Create Task\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/grading\">\r\n                    <span className=\"fa fa-graduation-cap fa-lg\"></span> Grading\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n              <Nav className=\"ml-auto\" navbar>\r\n                <NavItem>\r\n                  <NavLink to=\"/\">\r\n                    <Button outline color=\"danger\">\r\n                      <span className=\"fa fa-power-off fa-lg\"></span> Logout\r\n                    </Button>\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </Collapse>\r\n          </div>\r\n        </Navbar>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Header from \"./headerComponent\";\r\nimport \"../css/home.css\";\r\n\r\nfunction Home() {\r\n  const instructions = [\r\n    \"1.Lorem ipsum dolor sit amet\",\r\n    \" 2.Consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\r\n    \",3.Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\",\r\n    \"4.Duis aute irure dolor in reprehenderit in voluptate velit essecillum dolore eu fugiat nulla pariatur.\",\r\n    \"5.Excepteur sint occaecat cupidatat non proident, sunt in culpa quiofficia deserunt mollit anim id est laborum.\",\r\n  ];\r\n  const list = instructions.map((ins) => {\r\n    return (\r\n      <li className=\" rule-list\" key={ins[0]}>\r\n        <div>{ins}</div>\r\n        <hr />\r\n      </li>\r\n    );\r\n  });\r\n  return (\r\n    <div className=\"home\">\r\n      <Header />\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-5 description\">\r\n            <p>\r\n              Sed ut perspiciatis unde omnis iste natus error sit voluptatem\r\n              accusantium doloremque laudantium, totam rem aperiam, eaque ipsa\r\n              quae ab illo inventore veritatis et quasi architecto beatae vitae\r\n              dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit\r\n              aspernatur aut odit aut fugit, sed quia consequuntur magni dolores\r\n              eos qui ratione voluptatem sequi nesciunt. .\r\n            </p>\r\n          </div>\r\n          <div className=\"col-10 offset-1 col-sm-5 offset-sm-2 rules\">\r\n            <h2>Rules and Regulations</h2>\r\n            <hr />\r\n            <ul className=\"list-unstyled\">{list}</ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport Header from \"./headerComponent\";\r\nimport { Form, FormGroup, Input, Label, FormText, Button } from \"reactstrap\";\r\nimport \"../css/create.css\";\r\n\r\nclass Create extends Component {\r\n  state = {\r\n    file: \"\",\r\n    level: \"\",\r\n    task_id: \"\",\r\n    instructions: \"\",\r\n  };\r\n  handleSubmit = (values) => {\r\n    console.log(\"Submitted\", values);\r\n  };\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      file: URL.createObjectURL(event.target.files[0]),\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"create\">\r\n        <Header />\r\n        <div className=\"container\">\r\n          <div className=\"row task-form\">\r\n            <div className=\"col-10 offset-xs-1 col-sm-4  \">\r\n              <h2>CREATE A TASK</h2>\r\n              <hr />\r\n              <Form onSubmit={this.handleSubmit}>\r\n                <FormGroup>\r\n                  <Label for=\"imageFile\">Upload the original image file</Label>\r\n                  <Input\r\n                    type=\"file\"\r\n                    name=\"file\"\r\n                    id=\"imageFile\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  <FormText color=\"muted\">\r\n                    The file must have .jpeg or .jpg extension(If you are using\r\n                    a smartphone, see image preview below)\r\n                  </FormText>\r\n                </FormGroup>\r\n                <FormGroup tag=\"fieldset\">\r\n                  <legend>Task level</legend>\r\n                  <FormGroup check>\r\n                    <Label check>\r\n                      <Input\r\n                        type=\"radio\"\r\n                        name=\"level\"\r\n                        onClick={() => {\r\n                          this.setState({ level: \"beginner\" });\r\n                        }}\r\n                      />{\" \"}\r\n                      Beginner level task{\" \"}\r\n                    </Label>\r\n                  </FormGroup>\r\n                  <FormGroup check>\r\n                    <Label check>\r\n                      <Input\r\n                        type=\"radio\"\r\n                        name=\"level\"\r\n                        onClick={() => {\r\n                          this.setState({ level: \"intermediate\" });\r\n                        }}\r\n                      />{\" \"}\r\n                      Intermediate level task{\" \"}\r\n                    </Label>\r\n                  </FormGroup>\r\n                  <FormGroup check disabled>\r\n                    <Label check>\r\n                      <Input\r\n                        type=\"radio\"\r\n                        name=\"level\"\r\n                        onClick={() => {\r\n                          this.setState({ level: \"advanced\" });\r\n                        }}\r\n                      />{\" \"}\r\n                      Advanced level task\r\n                    </Label>\r\n                  </FormGroup>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"task_id\">Task ID</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"task_id\"\r\n                    onChange={() => {\r\n                      this.setState({\r\n                        task_id: this.value,\r\n                      });\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"instructions\">Editing instructions</Label>\r\n                  <Input\r\n                    type=\"textarea\"\r\n                    name=\"text\"\r\n                    id=\"instructions\"\r\n                    rows=\"8\"\r\n                    onChange={(e) => {\r\n                      this.setState({ instructions: e.target.value });\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n                <hr />\r\n                <Button type=\"submit\" value=\"submit\" color=\"success\">\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </div>\r\n            <div className=\"col-10 offset-1 col-sm-5 offset-sm-3 \">\r\n              <div className=\"container\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-8 offset-2 \">\r\n                    <h2>IMAGE PREVIEW</h2>\r\n                    <hr />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-10 offset-1 \">\r\n                    <img src={this.state.file} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Create;\r\n","import React, { Component } from \"react\";\r\nimport Header from \"./headerComponent\";\r\nimport {\r\n  Card,\r\n  CardTitle,\r\n  CardBody,\r\n  CardFooter,\r\n  FormGroup,\r\n  Label,\r\n  FormText,\r\n  Input,\r\n  Form,\r\n  Button,\r\n  Col,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport \"../css/grade.css\";\r\n\r\nclass Grade extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      grades: [],\r\n      task_id: \"task1\",\r\n      temp_task: \"\",\r\n      score: 1,\r\n      reg: \"\",\r\n    };\r\n    this.handleInput = this.handleInput.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleInput(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n  handleScore(event) {\r\n    this.setState({\r\n      grades: this.state.grades.push({\r\n        reg: this.state.reg,\r\n        score: this.state.score,\r\n      }),\r\n    });\r\n    event.preventDefault();\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    this.setState({ task_id: this.state.temp_task });\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    const images = {\r\n      task1: [\r\n        { reg: \"Entry-a\", src: \"assets/images/3-edits.jpg\" },\r\n        { reg: \"Entry-b\", src: \"assets/images/3-edits.jpg\" },\r\n        { reg: \"Entry-c\", src: \"assets/images/3-edits.jpg\" },\r\n        { reg: \"Entry-d\", src: \"assets/images/3-edits.jpg\" },\r\n        { reg: \"Entry-e\", src: \"assets/images/3-edits.jpg\" },\r\n        { reg: \"Entry-f\", src: \"assets/images/3-edits.jpg\" },\r\n      ],\r\n      task2: [\r\n        { reg: \"Entry-g\", src: \"assets/images/myface.jpg\" },\r\n        { reg: \"Entry-h\", src: \"assets/images/myface.jpg\" },\r\n        { reg: \"Entry-i\", src: \"assets/images/myface.jpg\" },\r\n        { reg: \"Entry-j\", src: \"assets/images/myface.jpg\" },\r\n        { reg: \"Entry-k\", src: \"assets/images/myface.jpg\" },\r\n        { reg: \"Entry-l\", src: \"assets/images/myface.jpg\" },\r\n      ],\r\n      task3: [\r\n        { reg: \"Entry-m\", src: \"assets/images/photo.jpg\" },\r\n        { reg: \"Entry-n\", src: \"assets/images/photo.jpg\" },\r\n        { reg: \"Entry-o\", src: \"assets/images/photo.jpg\" },\r\n        { reg: \"Entry-p\", src: \"assets/images/photo.jpg\" },\r\n        { reg: \"Entry-q\", src: \"assets/images/photo.jpg\" },\r\n        { reg: \"Entry-r\", src: \"assets/images/photo.jpg\" },\r\n      ],\r\n    };\r\n    let list = images[this.state.task_id].map((entry) => {\r\n      return (\r\n        <div className=\"col-10 offset-1 col-sm-5 mt-3\" key={entry.reg}>\r\n          <Card>\r\n            <CardTitle className=\"card-title\">Student ID:{entry.reg}</CardTitle>\r\n\r\n            <CardBody className=\"cardbody\">\r\n              <img src={entry.src} alt={entry.reg} />\r\n            </CardBody>\r\n            <CardFooter>\r\n              <FormGroup>\r\n                <Label for=\"score\">Score</Label>\r\n                <Row>\r\n                  <Col xs={9} sm={9}>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"number\"\r\n                      name=\"score\"\r\n                      min=\"1\"\r\n                      max=\"10\"\r\n                      placeholder=\"Score out of 10\"\r\n                      onChange={this.handleInput}\r\n                    ></Input>\r\n                  </Col>\r\n                  <Col xs={2} sm={2}>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      onSubmit={(e) => {\r\n                        this.setState({ reg: entry.reg });\r\n                        this.handleScore(e);\r\n                      }}\r\n                    >\r\n                      <i className=\"fa fa-check\"></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </FormGroup>\r\n            </CardFooter>\r\n          </Card>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"grade\">\r\n        <Header />\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col offset-1\">\r\n              <Form\r\n                onSubmit={(e) => {\r\n                  list = this.handleSubmit(e);\r\n                }}\r\n              >\r\n                <FormGroup className=\"score\">\r\n                  <Label for=\"task\">Task ID:</Label>\r\n                  <Row>\r\n                    <Col xs={8} sm={5}>\r\n                      <Row>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"temp_task\"\r\n                          defaultValue={this.state.task_id}\r\n                          onChange={this.handleInput}\r\n                        />\r\n                      </Row>\r\n                      <Row>\r\n                        <FormText color=\"muted\">\r\n                          To view the entries for a particular task enter\r\n                          correct the task ID\r\n                        </FormText>\r\n                      </Row>\r\n                    </Col>\r\n                    <Col xs={1} sm={1}>\r\n                      <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                        <i className=\"fa fa-search\"></i>\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </FormGroup>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n          <div className=\"row cards\">{list}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Grade;\r\n","import React from \"react\";\nimport Front from \"./Components/frontComponent\";\nimport Home from \"./Components/homeComponent\";\nimport Create from \"./Components/createComponent\";\nimport Grade from \"./Components/gradeComponent\";\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Route exact path=\"/\" component={Front} />\n      <Route exact path=\"/home\" component={Home} />\n      <Route exact path=\"/createTask\" component={Create} />\n      <Route exact path=\"/grading\" component={Grade} />\n      <Redirect to=\"/home\" />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}